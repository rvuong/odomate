services:
  # Frontend React PWA
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=${REACT_APP_API_URL:-http://localhost:8000}
      - REACT_APP_ENV=development
      - CHOKIDAR_USEPOLLING=true # utile pour hot reload avec bind mounts
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - art-detection-network

  # Backend Python FastAPI
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    ports:
      - "8000:8000"
    environment:
      - HF_HOME=/app/cache
#      - DATABASE_URL=postgresql://${POSTGRES_USER:-artuser}:${POSTGRES_PASSWORD:-artpass}@postgres:5432/${POSTGRES_DB:-artdb}
#      - REDIS_URL=redis://redis:6379
#      - OPENAI_API_KEY=${OPENAI_API_KEY}
#      - GOOGLE_VISION_API_KEY=${GOOGLE_VISION_API_KEY}
    volumes:
      - ./backend:/app
      - ./backend/cache:/app/cache
#      - ./backend/uploads:/app/uploads
#    depends_on:
#      - postgres
#      - redis
    networks:
      - art-detection-network
    depends_on:
      - weaviate

#  # PostgreSQL Database
#  postgres:
#    image: postgres:17-alpine
#    environment:
#      - POSTGRES_DB=${POSTGRES_DB:-artdb}
#      - POSTGRES_USER=${POSTGRES_USER:-artuser}
#      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-artpass}
#    volumes:
#      - postgres_data:/var/lib/postgresql/data
##      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
#    ports:
#      - "5432:5432"
#    networks:
#      - art-detection-network

#  # Redis Cache
#  redis:
#    image: redis:8-alpine
#    ports:
#      - "6379:6379"
#    volumes:
#      - redis_data:/data
#    networks:
#      - art-detection-network

  # Base vectorielle pour similarit√© (optionel)
  weaviate:
    command:
      - --host
      - 0.0.0.0
      - --port
      - '8080'
      - --scheme
      - http
    image: cr.weaviate.io/semitechnologies/weaviate:1.30.0
    ports:
      - 8080:8080
      - 50051:50051
    volumes:
      - weaviate_data:/var/lib/weaviate
    restart: on-failure:0
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      DEFAULT_VECTORIZER_MODULE: 'none'
      ENABLE_MODULES: ''
      CLUSTER_HOSTNAME: 'node1'
    networks:
      - art-detection-network

#  weaviate:
#    image: semitechnologies/weaviate:1.30.0
#    ports:
#      - '8080:8080'
#      - '50051:50051'
#    environment:
#      QUERY_DEFAULTS_LIMIT: 25
#      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
#      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
#      ENABLE_API_BASED_MODULES: 'true'
#      ENABLE_MODULES: 'text2vec-ollama,generative-ollama'
#      CLUSTER_ENABLED: 'false'
#    volumes:
#      - weaviate_standalone_data:/var/lib/weaviate
#    networks:
#      - art-detection-network
#    restart: on-failure:0

#  # Service de traitement d'images (optionnel)
#  image-processor:
#    build:
#      context: ./image-processor
#      dockerfile: Dockerfile
#    environment:
#      - REDIS_URL=redis://redis:6379
#    depends_on:
#      - redis
#    networks:
#      - art-detection-network

networks:
  art-detection-network:
    driver: bridge

volumes:
#  postgres_data:
#  redis_data:
  weaviate_data:
